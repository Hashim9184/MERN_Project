{"ast":null,"code":"const jwt = require(\"jsonwebtoken\");\n\nconst User = require(\"../../../server/model/userSchema\");\n\nconst Authenticate = async (req, res, next) => {\n  try {\n    const token = req.cookies.jwtoken;\n    const verifyToken = jwt.verify(token, process.env.SECRET_KEY);\n    const rootUser = await User.findOne({\n      _id: verifyToken._id,\n      \"token.token\": token\n    });\n\n    if (!rootUser) {\n      throw new Error('User not found');\n    }\n\n    req.token = token;\n    req.rootUser = rootUser;\n    req.userID = rootUser._id;\n    next();\n  } catch (err) {\n    res.status(401).send('Unauthorized: No token provided');\n    console.log(err);\n  }\n};\n\n_c = Authenticate;\nmodule.exports = Authenticate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"sources":["C:/React Project/rebuilt/client/src/components/authenticate.js"],"names":["jwt","require","User","Authenticate","req","res","next","token","cookies","jwtoken","verifyToken","verify","process","env","SECRET_KEY","rootUser","findOne","_id","Error","userID","err","status","send","console","log","module","exports"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,kCAAD,CAApB;;AAEA,MAAME,YAAY,GAAG,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAAyB;AAC1C,MAAG;AACC,UAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAYC,OAA1B;AACA,UAAMC,WAAW,GAAGV,GAAG,CAACW,MAAJ,CAAWJ,KAAX,EAAkBK,OAAO,CAACC,GAAR,CAAYC,UAA9B,CAApB;AAEA,UAAMC,QAAQ,GAAG,MAAMb,IAAI,CAACc,OAAL,CAAa;AAACC,MAAAA,GAAG,EAAEP,WAAW,CAACO,GAAlB;AAAuB,qBAAeV;AAAtC,KAAb,CAAvB;;AAEA,QAAG,CAACQ,QAAJ,EAAa;AACT,YAAM,IAAIG,KAAJ,CAAU,gBAAV,CAAN;AACH;;AAEDd,IAAAA,GAAG,CAACG,KAAJ,GAAYA,KAAZ;AACAH,IAAAA,GAAG,CAACW,QAAJ,GAAeA,QAAf;AACAX,IAAAA,GAAG,CAACe,MAAJ,GAAaJ,QAAQ,CAACE,GAAtB;AAEAX,IAAAA,IAAI;AACP,GAfD,CAeC,OAAMc,GAAN,EAAU;AACPf,IAAAA,GAAG,CAACgB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,iCAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACH;AACJ,CApBD;;KAAMjB,Y;AAsBNsB,MAAM,CAACC,OAAP,GAAiBvB,YAAjB","sourcesContent":["const jwt = require(\"jsonwebtoken\");\r\nconst User = require(\"../../../server/model/userSchema\");\r\n\r\nconst Authenticate = async (req, res, next) =>{\r\n    try{\r\n        const token = req.cookies.jwtoken;\r\n        const verifyToken = jwt.verify(token, process.env.SECRET_KEY);\r\n\r\n        const rootUser = await User.findOne({_id: verifyToken._id, \"token.token\": token});\r\n\r\n        if(!rootUser){\r\n            throw new Error('User not found')\r\n        }\r\n\r\n        req.token = token;\r\n        req.rootUser = rootUser;\r\n        req.userID = rootUser._id;\r\n\r\n        next();\r\n    }catch(err){\r\n        res.status(401).send('Unauthorized: No token provided')\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nmodule.exports = Authenticate;"]},"metadata":{},"sourceType":"module"}